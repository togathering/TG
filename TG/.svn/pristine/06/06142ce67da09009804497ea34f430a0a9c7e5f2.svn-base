package com.tg.group.create.control;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;




import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.tg.common.beans.GroupBean;
import com.tg.common.dao.GroupDAO;
import com.tg.common.dao.ParticipantDAO;
import com.tg.common.dao.ReplyDAO;

@Controller
public class CreateControl{
	
	@Autowired
	ReplyDAO rdao;
	@Autowired
	ParticipantDAO pdao;
	@Autowired
	GroupDAO dao;
	@Autowired
	GroupBean bean;
	
	@RequestMapping("/gxcreate")
	public String groupCreate(HttpServletRequest request) throws Exception{	
		
		request.setCharacterEncoding("UTF-8");
		
		// 파일이 저장될 서버의 경로
		
		String savePath = request.getSession().getServletContext().getRealPath("upimg");
		//서버로 사용할 1명의 경로만 절대경로로 잡으면 됨
		// 파일 크기 15MB로 제한
		int sizeLimit = 1024*1024*15;
		 
		// MultipartRequest를 생성
		MultipartRequest multi = new MultipartRequest(request, savePath, sizeLimit, "EUC-KR", new DefaultFileRenamePolicy());
		 
		// 전송받은 데이터가 파일일 경우 getFilesystemName()으로 파일 이름을 받아올 수 있다.
		String imgfile = multi.getFilesystemName("imgfile");
		 
		// 업로드한 파일의 전체 경로를 DB에 저장하기위해 gimg변수에 전체경로 입력
		String gimg = imgfile;		
	
		String [] day = multi.getParameter("gdate").split("-");
		String date = "";
		for(int i=0;i<day.length;i++){
			if(i!=0){
				if(day[i].length()==1){
					day[i] = "0"+day[i];
				}
			}
			date += day[i];
		}
		String hour = multi.getParameter("hour");
		String minute = multi.getParameter("minute");
		String id = (String) request.getSession().getAttribute("id");
		String gdate = date + hour + minute;
		String gloc = multi.getParameter("loc");
		int gmin = Integer.parseInt(multi.getParameter("min"));
		int gmax = Integer.parseInt(multi.getParameter("max"));
		String gtitle = multi.getParameter("title");
		String gintro = multi.getParameter("message");
		String gtag = multi.getParameter("tag");
	
		/*String orgFile = savePath +"\\"+ imgfile;
		System.out.println(orgFile);
		 
	    // 썸네일 이미지
	    String thumbFile = savePath + "\\thumb_" + imgfile;
	 
	    // 썸네일 이미지 가로크기(단위 : px)
	    int thumbWidth = 440 ;
	 
	    // 썸네일 이미지 세로크기(단위 : px)
	    int thumbHeight = 330 ;
	 
	    try{	 
	        // 썸네일 설정
	        Image thumbnail = JimiUtils.getThumbnail(orgFile, thumbWidth, thumbHeight, Jimi.IN_MEMORY);	 
	        // 썸네일 생성
	        Jimi.putImage(thumbnail, thumbFile);	 	 
	    }catch(Exception e){
	        e.printStackTrace();
	    }

	    */
		GroupBean bean = new GroupBean();
		 
		// Bean객체를 생성 후, 데이터들을 set해준다.

		
		/*// 만약 return할 페이지에 방금 전송한 데이터들을 출력하고 싶다면 DTO를 속성에 담아준다.
			request.setAttribute("gimg", bean);*/
	
		bean.setGdate(gdate);
		bean.setGhost(id);
		bean.setGintro(gintro);
		bean.setGloc(gloc);
		bean.setGmax(gmax);
		bean.setGmin(gmin);
		bean.setGtitle(gtitle);
		bean.setGtag(gtag);
		bean.setGimg(gimg);
		
		if(dao.create(bean)){
			System.out.println("모임생성성공");
		}else {
			System.out.println("모임생성실패");
		}
				
		return "redirect:main";
	}
	
	@RequestMapping("/delGroup")
	public String delGroup(@RequestParam(value="gno")String gxno){
		int gno = Integer.parseInt(gxno);
		
		if(rdao.delGroup(gno)){
			System.out.println("댓글삭제성공");
		}
		if(pdao.delGroup(gno)){
			System.out.println("참가멤버들 삭제성공");		
		}
		if(dao.delGroup(gno)){
			System.out.println("모임삭제성공");
		}else{
			System.out.println("모임삭제실패");
		}
		return "redirect:main";
	}
}
